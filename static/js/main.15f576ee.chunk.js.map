{"version":3,"sources":["main-header.png","api/TESTS.js","components/MainPage.js","components/QuestionCount.js","components/Question.js","components/Quiz.js","components/Result.js","components/Loading.js","components/Intro.js","components/ResultToIntro.js","App.js","reportWebVitals.js","index.js"],"names":["range","start","stop","step","result","i","push","TESTS","info","mainTitle","subTitle","mainUrl","scoreType","mainImage","questions","question","answers","type","score","content","results","desc","query","score_range","img_src","MainPage","props","_all_tests_url","length","state","all_tests_url","className","src","MAINHEADER","alt","this","map","item","to","replaceAll","Component","QuestionCount","ProgressBar","now","quizCount","totalCount","variant","Question","Quiz","appearQuiz","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","qAndA","quizNum","_questions","nextQuizNum","Button","value","onClick","e","preventDefault","onChangeMode","target","setState","bind","size","arrayShuffler","renderAnswerOptions","Result","_sharable_url","window","location","href","_current_url","split","_current_test","reverse","_current_result","mode","sharable_url","current_url","current_test","current_result","_onBackToStartButtonClick","current_tests_path","basename","path","component","test","exact","final_type","final_desc","j","Card","bg","Body","Text","App","history","goBack","resultRender","text","alert","_page","resultPageRender","introPageRender","mainPageRender","pageRenderer","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","Loading","options","height","width","Intro","_answer_type_obj","min","answer_type_obj","quizNumber","counted_score","result_url","quiz_url","participants","trunc","toString","replace","_onStartButtonClick","_onMainButtonClick","_mainTitle","_subTitle","bsPrefix","final_score","k","includes","final_result","keys","Object","max","max_keys","z","key","_quizNum","_score","_mode","_scores","Number","_answer","_answer_obj","assign","setTimeout","final_score_query","resultCaculator","quizPageRender","lodingPageRender","Helmet","name","data-react-helmet","rel","property","withRouter","ResultToIntro","test_main_url","defaultGuidePageRender","_all_tests_result_url","_final_render_routes","l","result_route","all_tests_result_url","final_render_routes","currentDocumentTimestamp","Date","performance","timing","domLoading","getTime","reload","data-ad-client","async","reloadPage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15f576ee.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/main-header.28536f9e.png\";","function range(start, stop, step) {\n    if (typeof stop == 'undefined') {\n        // one param defined\n        stop = start;\n        start = 0;\n    }\n\n    if (typeof step == 'undefined') {\n        step = 1;\n    }\n\n    if ((step > 0 && start >= stop) || (step < 0 && start <= stop)) {\n        return [];\n    }\n\n    var result = [];\n    for (var i = start; step > 0 ? i < stop : i > stop; i += step) {\n        result.push(i);\n    }\n\n    return result;\n};\n\nvar TESTS = [\n    // order tests with newly date order\n    {\n        info : {\n            mainTitle:\"바람끼 테스트\",\n            subTitle:\"내 애인의 바람끼는 어느 정도일까.?\",\n            mainUrl:\"wind\",\n            scoreType:\"numberScoring\",\n            mainImage:\"https://dl.dropboxusercontent.com/s/u5oxd4jj4csh3p6/wind-main.png?dl=0\"\n        },\n        questions:[\n            {\n                question: '나의 주변사람들의 기분변화를 잘 캐치하나요?',\n                answers:[\n                    {\n                        type: \"포메라니안\",\n                        score: 2,\n                        content: '기분이 좋지 않을 땐 혼자 있다가 기분이 나아 질 때 힘차게 돌아온다.'\n                    },\n                    {\n                        type: \"치와와\",\n                        score: 5,\n                        content: '음 때에 따라 다른 것 같아요.'\n                    },\n                    {\n                        type: \"비글\",\n                        score: 10,\n                        content: '넹, 친구들이 기분이 나쁘거나 안 좋은 거 있음 먼저 눈치채는 편이죠.'\n                    },\n                ],\n            },\n            {\n                question: \"회사 내 사내연애 커플이 탄생했다. \\n모두들 아는 눈치다. \\n그 자리에서 나의 반응은?\",\n                answers:[\n                    {\n                        type: \"포메라니안\",\n                        score: 2,\n                        content: \"엥??? 둘이요???? 그 둘이 사귄다고요???\"\n                    },\n                    {\n                        type: \"웰시코기\",\n                        score: 5,\n                        content: \"아진짜? 너네 둘이??? 나는 그냥 친한 줄 알았지~ 뭐야~ 축하해!!\"\n                    },\n                    {\n                        type: \"리트리버\",\n                        score: 10,\n                        content: \"그래~ 너네만 모르는 사내연애지 으유 그럴줄 알았다.\"\n                    },\n                ]\n            },\n            {\n                question: \"놀이공원에 간 당신! \\n친구들이 제일 스릴넘치는 롤러코스터를 타자고 한다!\\n나는 어떻게 할 것인가???\",\n                answers:[\n                    {\n                        type: \"치와와\",\n                        score: 2,\n                        content: \"아 미안 난 여기서 기다리고 있을게 타고와..!\"\n                    },\n                    {\n                        type: \"웰시코기\",\n                        score: 5,\n                        content: \"아 싫은데...그래도 타자니까 다같이 타야지ㅜ\"\n                    },\n                    {\n                        type: \"리트리버\",\n                        score: 10,\n                        content: \"그렇지~ 놀이공원 왔으면 타 줘야지~~~\"\n                    },\n                ]\n            },\n            {\n                question: \"너무너무 완벽한 나의 이상형인 사람이 \\n계속 날 쳐다보며 웃는 상황!\\n당신의 행동은?\",\n                answers:[\n                    {\n                        type: \"비글\",\n                        score: 2,\n                        content: \"부끄럽기 때문에 그냥 수줍게 눈을 피한다.\"\n                    },\n                    {\n                        type: \"리트리버\",\n                        score: 5,\n                        content: \"그냥 눈을 보며 웃어준다.\"\n                    },\n                    {\n                        type: \"포메라니안\",\n                        score: 10,\n                        content: \"너무 떨리지만 용기를 내 먼저 가서 번호를 물어본다.\"\n                    },\n                ]\n            },\n            {\n                question: \"친구들과 있을 때 나의 포지션은??\",\n                answers:[\n                    {\n                        type: \"리트리버\",\n                        score: 2,\n                        content: \"내가 중심! 말을 먼저 꺼내고 분위기를 으쌰 하게 만드는 분위기메이커~!\"\n                    },\n                    {\n                        type: \"웰시코기\",\n                        score: 5,\n                        content: \"리액션을 많이 하고 잘 웃으며, 박수친다.\"\n                    },\n                    {\n                        type: \"비글\",\n                        score: 10,\n                        content: \"웃긴 웃지만 대부분 조용조용한 편이다.\"\n                    },\n                ]\n            },\n            {\n                question: \"친구들과의 약속에 늦은 당신! \\n준비도 하나도 못했는데..\\n이 때 당신은?\",\n                answers:[\n                    {\n                        type: \"포메라니안\",\n                        score: 2,\n                        content: \"아 몰라 일단 가자! 가서 마저하면 되겠지! 최대한 빨리간다.\"\n                    },\n                    {\n                        type: \"비글\",\n                        score: 5,\n                        content: \"미안하다고 먼저 사과하고, 최소화 한뒤 나간다.\"\n                    },\n                    {\n                        type: \"리트리버\",\n                        score: 10,\n                        content: \"카톡이나 전화로 먼저 가라고 말한뒤 모든 준비를 다 하고 나간다.\"\n                    },\n                ]\n            },\n            {\n                question: \"당신은 소개팅에 나갔다. \\n상대를 볼때 중요시 생각하는 것은?\",\n                answers:[\n                    {\n                        type: \"비글\",\n                        score: 2,\n                        content: \"음 나는 외모도 외모! 성격도 성격! 둘다 중요한 것같아! 평범한게 최고!\"\n                    },\n                    {\n                        type: \"웰시코기\",\n                        score: 5,\n                        content: \"외모도 외모인데 나는 성격이 더 좋아야해! 잘생기고 이쁘면 인물값 한다잖아.\"\n                    },\n                    {\n                        type: \"포메라니안\",\n                        score: 10,\n                        content: \"첫인상의 90%는 외모지~ 외모가 호감이 가야 좋아지는거지!\"\n                    },\n                ]\n            },\n            {\n                question: \"어렸을 때 친구였지만 너무 좋아했던 짝사랑을 다같이 만났다.\\n애인때문에 힘들어 헤어진다는데 나의 대답은?\",\n                answers:[\n                    {\n                        type: \"비글\",\n                        score: 2,\n                        content: \"그래도 마지막으로 대화는 한번 더 해봐 라고 하며 위로해준다.\"\n                    },\n                    {\n                        type: \"치와와\",\n                        score: 5,\n                        content: \"그래! 헤어져버려! 그게 뭐야 정말 ..하고 같이 속상해한다.\"\n                    },\n                    {\n                        type: \"리트리버\",\n                        score: 10,\n                        content: \"너 마음가는대로 해 라며 술 한 잔 따라준다.\"\n                    },\n                ]\n            },\n            {\n                question: \"나의 이별 유형은?\",\n                answers:[\n                    {\n                        type: \"비글\",\n                        score: 2,\n                        content: \"그동안 못만난 친구들이나 만나자며 덤덤하게 받아들인다.\"\n                    },\n                    {\n                        type: \"포메라니안\",\n                        score: 5,\n                        content: \"새로운 사랑,,? 아냐 ..난 이제 사랑 같은 거 못해..\\n슬픔에 잠기는 스타일이다.\"\n                    },\n                    {\n                        type: \"웰시코기\",\n                        score: 10,\n                        content: \"이별의 아픔은 새로운 사랑으로 치유하는 것, 소개를 받는다.\"\n                    },\n                ]\n            },\n            {\n                question: \"오늘부터 운동을 시작한 당신! 당신의 복장은?\",\n                answers:[\n                    {\n                        type: \"비글\",\n                        score: 2,\n                        content: \"운동하기 편안한 티셔츠와 신기 편한 운동화\"\n                    },\n                    {\n                        type: \"치와와\",\n                        score: 5,\n                        content: \"유행을 따라간 스타일의 운동복과 포인트인 운동화\"\n                    },\n                    {\n                        type: \"웰시코기\",\n                        score: 10,\n                        content: \"전문가의 느낌이 나는 트레이닝복\"\n                    },\n                ]\n            },\n        ],\n        results:[\n            {\n                type: \"해바라기\",\n                desc: `밀당이 뭔데? '해바라기' 그것이 바로 나야 \\n\n                ✓   바람이 뭐야? 해바라기 스타일\\n\n                ✓   한 사람에게 빠지면 그 사람만 바라보는 당신은 해바라기 같은 사람! \\n\n                ✓   자기도 바쁘면서 남을 도우려고 먼저 양보하는 사람! \\n\n                ✓   이런 사람과 만나면 늘 사람 자체만으로 힐링 된다고 하는 사람들이 많아~ \\n\n                ✓   가끔 사랑을 주는 것만큼 되돌려 받지 못해 서운해하거나 속상해 하는 일이 많은 사람들이야. \\n\n                ✓   사랑을 바라는 것뿐인데 상대방이 떠나갈 때도 있지.  \\n\n                ✓   사랑을 더 주는건 손해가 아닌데도 손해를 보는 것같은 느낌이 들곤 하지.\\n\n                ✓   모두 나와 같은 사람들이면 좋을텐데! \\n\n                ✓   하지만 말하지 않으면 몰라! 더 표현해야해. \\n\n                ✓   싫은건 싫다 좋은 건 좋다고 말해보자~ \\n\n                ✓   같이 사랑하는 거니까! \\n\n                `,\n                query: \"goqkfkrl\",\n                score_range:range(51),\n                img_src:'https://dl.dropboxusercontent.com/s/lmxhin0m876d6ad/wind_goqofkrl.png?dl=0'\n            },\n            {\n                type: \"관심러\",\n                desc: `애인이 있을 땐 눈 안돌리는 스타일 \\n 친화력은 100점 바람기는 50점! \\n\n                ✓   바람은 아니지만 주변에 관심이 많아요~ \\n\n                ✓   잘생긴 사람! 이쁜 사람 좋아하는 건 그냥 좋아하는 것 뿐이지 내 사랑은 너야! \\n\n                ✓   그들은 그들인거고! 이쁜걸 누가 안좋아해? \\n\n                ✓   절대 바람은 피지 않지만 속으로는 여러 관심이 많은 사람들이죠! \\n\n                ✓   누구나 다 그렇잖아요~ 그냥 평범한 사랑을 하는 사람들이에요! \\n\n                ✓   지금도 나쁘지 않죠! 잘생긴고 이쁜 건 늘 짜릿하니까\\n\n                ✓   내사람은 당신! 내사람을 만날 때는 최선을 다하는! \\n\n                ✓   다른 이성을 좋아하는건 이해가 가지 않아요!\n                `,\n                query: \"rhkstlafj\",\n                score_range:range(51, 81),\n                img_src:'https://dl.dropboxusercontent.com/s/i5hf49fkbqkcgf3/wind_rhkstlafj.png?dl=0'\n            },\n            {\n                type: \"매력쟁이\",\n                desc: `난 매력쟁이지~ \\n 주변에서 날 가만히 놔두지 않아! \\n\n                ✓   사람을 좋아하고 놀기를 너무 좋아하는 사람들!\\n\n                ✓   에너지 자체가 넘치고 활기찬 사람들이야~\\n\n                ✓   스킨쉽도 너무 좋아하고 늘 먼저 시도하려고 하는 사람들이 많지? \\n\n                ✓   사람을 너무 좋아해서 그래! \\n\n                ✓   하지만 이런 사람들도 예민한 부분이 많다고 해. \\n\n                ✓   관계에 갈등이 있거나 상대방이 나에게 호감이 없다는 느낌이 오면 지나치게 감정적으로 행동하게 되어 갈등 해결을 포기하고 다른 사람을 만나기도 한데! \\n\n                ✓   상대방이 날 안 좋아하니 방어책을 만들어 놓기 위함이지~ \\n\n                ✓   외모도 출중하니까 모두에게 인기가 많아 이성접근이 쉽다는데~~~ \\n\n                ✓   하지만 모두 그러는 건 아니니 조심하자구~\n                `,\n                query: \"aofurwoddl\",\n                score_range:range(81, 101),\n                img_src:'https://dl.dropboxusercontent.com/s/pkisl9r1t75c0t1/wind_aofurwoddl.png?dl=0'\n            },\n        ]\n    },\n    {\n        info : {\n            mainTitle:\"강아지로 보는 성격 테스트\",\n            subTitle:\"내가 강아지 라면?\",\n            mainUrl:\"daengdaeng\",\n            scoreType:\"typeCounting\",\n            mainImage:\"https://dl.dropboxusercontent.com/s/lbvs0wpqhf9ohno/daengdaeng-main.png?dl=0\"\n        },\n        questions:[\n            {\n                question: '기분이 좋지 않을 때 나의 모습은?',\n                answers:[\n                    {\n                        type: \"포메라니안\",\n                        score: 2,\n                        content: '기분이 좋지 않을 땐 혼자 있다가 기분이 나아 질 때 힘차게 돌아온다.'\n                    },\n                    {\n                        type: \"치와와\",\n                        score: 5,\n                        content: '기분이 좋지 않을 때 누군가 날 건들이면 그 사람에 대해 참고 있던 게 폭발한다. '\n                    },\n                    {\n                        type: \"비글\",\n                        score: 10,\n                        content: '“아 몰랑! 그냥 신경 안쓸래에에에에!!!” 하고 털어낸다.'\n                    },\n                    {\n                        type: \"리트리버\",\n                        score: 10,\n                        content: '세상 살며 기분 안 좋을 일이 별로 없다.'\n                    },\n                ],\n            },\n            {\n                question: \"다음 중 나의 연애 스타일과 가장 비슷한 것은? 솔직해야 함 -_-\",\n                answers:[\n                    {\n                        type: \"포메라니안\",\n                        score: 2,\n                        content: \"애인이랑 노는 거 너무 좋아! 근데 친구들이랑 노는 것도 좋아!\\n둘 다 포기할 수 없지!\"\n                    },\n                    {\n                        type: \"웰시코기\",\n                        score: 5,\n                        content: \"집착 싫어! 집착은NO! 알아서 잘할 게! 의심하지 말아줬으면 좋겠어!\"\n                    },\n                    {\n                        type: \"리트리버\",\n                        score: 10,\n                        content: \"질투를 왜 해~아를 좋아하는 거 알고 믿으니까 안하는거지.\\n그래서 오늘은 뭐가 힘들었어? 너 하고 싶은 거 다하자^^\\n잘 들어주는 스타일\"\n                    },\n                    {\n                        type: \"치와와\",\n                        score: 10,\n                        content: \"연애하는 사람으로서 연락은 필수고 예의야. 질투는 그만큼 그 사람을 좋아 하는거고,,\\n내 남친/여친은 나만 바라봐줬으면 좋겠어. 사랑받고 싶으니까!\"\n                    },\n                ]\n            },\n            {\n                question: \"조별과제를 하라는 교수님...팀원들이 모였다.\\n과연 나의 역할을 무엇이 될까?\",\n                answers:[\n                    {\n                        type: \"치와와\",\n                        score: 2,\n                        content: \"모두를 컨트롤 하는 리더십의 끝판 왕 조장\"\n                    },\n                    {\n                        type: \"웰시코기\",\n                        score: 5,\n                        content: \"화려한 나의 발표실력을 보여주지, 발표자\"\n                    },\n                    {\n                        type: \"리트리버\",\n                        score: 10,\n                        content: \"꼼꼼함은 필수! 자료조사\"\n                    },\n                    {\n                        type: \"포메라니안\",\n                        score: 10,\n                        content: \"미적 센스가 필요한 PPT\"\n                    },\n                ]\n            },\n            {\n                question: \"드디어 동창회날 두근거리고 설레는 나,\\n과연 나는 동창회에서 어떨까?\",\n                answers:[\n                    {\n                        type: \"비글\",\n                        score: 2,\n                        content: \"여기저기 아는 사람과 반갑게 인사하며, 돌아다니면서 노는 인 싸 스타일\"\n                    },\n                    {\n                        type: \"리트리버\",\n                        score: 5,\n                        content: \"가만히 있어도 주변에 친구들이 먼저 다가오는 인기쟁이 스타일\"\n                    },\n                    {\n                        type: \"포메라니안\",\n                        score: 10,\n                        content: \"처음에 낯을 가려 조금 어색해하지만 금세 친해져서 재밌게 분위기를 주도하는 반인싸스타일\"\n                    },\n                    {\n                        type: \"치와와\",\n                        score: 10,\n                        content: \"아는친구들은 많지 않지만 친한친구들과는 재밌게 논다\"\n                    },\n                ]\n            },\n            {\n                question: \"드디어 기다렸던 주말! 나의 모습은?\",\n                answers:[\n                    {\n                        type: \"리트리버\",\n                        score: 2,\n                        content: \"집밖은 위험해~잠을 자거나 침대 위에서 크게 벗어나지 않는 휴식\"\n                    },\n                    {\n                        type: \"웰시코기\",\n                        score: 5,\n                        content: \"집에서 쉬는 건 너무 시간이 안간다. 친구들에게 만나자고 연락한다.\"\n                    },\n                    {\n                        type: \"비글\",\n                        score: 10,\n                        content: \"주말에는 무조건 나가야지! 평일에 미리 봐두었던 힙한 곳과 핫플인 곳을 찾아간다.\"\n                    },\n                    {\n                        type: \"치와와\",\n                        score: 10,\n                        content: \"평일에 받은 스트레스를 맛난 음식을 먹으면 미뤄왔던 영화나 드라마를 본다.\"\n                    },\n                ]\n            },\n            {\n                question: \"인형을 선물받았다. 과연 그 인형은 무엇일까?\",\n                answers:[\n                    {\n                        type: \"포메라니안\",\n                        score: 2,\n                        content: \"극세사로 만든 복슬거리는 중간사이즈 강아지 인형\"\n                    },\n                    {\n                        type: \"비글\",\n                        score: 5,\n                        content: \"껴안고 자기 좋은 길다란 바나나 인형\"\n                    },\n                    {\n                        type: \"리트리버\",\n                        score: 10,\n                        content: \"완전 큰 곰인형\"\n                    },\n                    {\n                        type: \"웰시코기\",\n                        score: 10,\n                        content: \"납작해서 베개로 사용하기도 딱 좋은 원숭이 인형\"\n                    },\n                ]\n            },\n            {\n                question: \"놀이공원에서 당신의 모습은?\",\n                answers:[\n                    {\n                        type: \"비글\",\n                        score: 2,\n                        content: \"이왕 온거 다 타봐야제~~~~호러, 롤러코스터 등 다 타본다! \"\n                    },\n                    {\n                        type: \"웰시코기\",\n                        score: 5,\n                        content: \"딱히 불평하지 않고 다 탄다!\"\n                    },\n                    {\n                        type: \"포메라니안\",\n                        score: 10,\n                        content: \"궁금은 하지만 겁이 많아서 고민하거나 무서운 건 타지 않는다.\"\n                    },\n                    {\n                        type: \"치와와\",\n                        score: 10,\n                        content: \"타긴 다 타지만 힘들면 못타는 사람과 함께 쉰다.\"\n                    },\n                ]\n            },\n            {\n                question: \"친구들과 약속을 잡던 중 맛집을 물어보는 친구들에게 하는 나의 대답은?\",\n                answers:[\n                    {\n                        type: \"비글\",\n                        score: 2,\n                        content: \"맛집? 나만 믿어~ 나 맛집리스트 다있어~~ 하면 추천하며 적극적으로 홍보한다.\"\n                    },\n                    {\n                        type: \"치와와\",\n                        score: 5,\n                        content: \"맛집이라고 추천하는 친구의 말에 따라간다.\"\n                    },\n                    {\n                        type: \"리트리버\",\n                        score: 10,\n                        content: \"아무곳이나 갠춘~ 별 생각이 없다.\"\n                    },\n                    {\n                        type: \"웰시코기\",\n                        score: 10,\n                        content: \"일단 만나자! 가서 돌아다니다 보면 맛집스러운곳 있을 거야 허허 한다.\"\n                    },\n                ]\n            },\n            {\n                question: \"파티가 있을 때 나의 복장은?\",\n                answers:[\n                    {\n                        type: \"비글\",\n                        score: 2,\n                        content: \"주인공은 바로 나, 돋보일 수 있게 화려하고 멋있게 최대한 꾸미고 간다.\"\n                    },\n                    {\n                        type: \"포메라니안\",\n                        score: 5,\n                        content: \"나의 장점을 최대한으로 이끌 수 있게 스타일링을 한다.\"\n                    },\n                    {\n                        type: \"웰시코기\",\n                        score: 10,\n                        content: \"깔끔하지만 스타일리시한 포인트를 준다.\"\n                    },\n                    {\n                        type: \"리트리버\",\n                        score: 10,\n                        content: \"기본템을 장착한 댄디하고 캐주얼한 느낌\"\n                    },\n                ]\n            },\n            {\n                question: \"내가 가고싶은 여행지 스타일은?\",\n                answers:[\n                    {\n                        type: \"비글\",\n                        score: 2,\n                        content: \"네온사인 가득~ 신나는 파라다이스 놀이공원\"\n                    },\n                    {\n                        type: \"치와와\",\n                        score: 5,\n                        content: \"이곳의 유명한 박물관이나 건물들은 꼭 가봐야지\"\n                    },\n                    {\n                        type: \"웰시코기\",\n                        score: 10,\n                        content: \"꽃, 나무 자연이 가득한 여행지\"\n                    },\n                    {\n                        type: \"포메라니안\",\n                        score: 10,\n                        content: \"친구들끼리 프라이빗하게 놀 수 있는 수영장이 있는 풀빌라\"\n                    },\n                ]\n            },\n        ],\n        results:[\n            {\n                type: \"포메라니안\",\n                desc: `세상 제일 귀엽지만 세상 제일 지랄견인 나는 ‘포메라니안’ \\n\n                ✓   친구들에게 인기가 많은 타입으로 주변에 사람이 많고 늘 주인공 역할을 해요! \\n\n                ✓   활발하고 호기심이 많지만 겁이 너무 많아요 \\n\n                ✓   살짝 성격이 지랄맞을 때도 있는데 그럴 땐 좀 냅둬야 합니다. 풀어주려고 하지 말고 가만히 냅두세요. 알아서 풀리고 다시 기분이 좋아집니다.\\n\n                ✓   외모에 관심이 많은 스타일이라 스타일링을 바꾸고 싶어하지만 결국 다시 원래의 스타일로 돌아오곤 하죠.\\n\n                ✓   자기가 기분 좋을 땐 세상 애교쟁이, 기분 안 좋으면 세상 지랄견!\\n\n                ✓   사람을 너무 좋아해서 이것저것 다 퍼줍니다. \\n\n                ✓   기분 안 좋은 티를 숨기지 못해 가끔 표정관리가 안돼요.\\n\n                ✓   우리 친구들은 낯을 많이 가리는데 시간이 지나면서 친해지면 미친듯이 활기차게 놀아요.\\n\n                ✓   한 번 화나면 불같이 화를 내는 다혈질 적인 성격이 있어요.\\n\n                `,\n                query: \"1chqhwlqzhrfj\",\n                score_range:range(26),\n                img_src:'https://dl.dropboxusercontent.com/s/yyvtej5cg2o9b4n/daengdaeng_pome.png?dl=0'\n            },\n            {\n                type: \"치와와\",\n                desc: `작지만 용감한 난 질투쟁이 치와와~ 난 참지 않Z…!\\n\n                ✓   뽈뽈 돌아다니면서 많은 참견을 하는 참견쟁이들\\n\n                ✓   내 사람은 너무너무 소중하지만, 친하지 않은 사람들에겐 낯을 많이 가려요. 경계심 대마왕이라서 섣불리 다가가면 안 됩니다. 치와와 친구들에게 시간을 주세요!\\n\n                ✓   질투심이 많아서 조심해야해요. 잘못걸리는 순간 그날은 전쟁입니다. 나에게 질투에 대한 실험을 하지마세요!!\\n\n                ✓   불의를 보면 물불 가리지 않는 겁이 없는 용감한 용자! 으르렁!\\n\n                ✓   스트레스는 음식으로 풀 때가 있어요.\\n\n                ✓   내사람을 너무 좋아하다 보니 가끔 외로움을 많이 타요.\\n\n                ✓   눈치가 빨라서 행동에 막힘이 없이 재빠르게 움직이는 부지런쟁이들입니다.\\n\n                ✓   기부니가 좋을 땐 애교쟁이><기분이가 안 좋을 땐 까칠쟁이 ✓_✓\\n\n                ✓   가끔 앞 뒤가 다른 사회생활 만랩이랍니다~\\n\n                ✓   참는걸 극도로 싫어해요.`,\n                query: \"2tjsxorgudwlqzhrfj\",\n                score_range:range(26, 51),\n                img_src:'https://dl.dropboxusercontent.com/s/n3hj9d48qzemle2/daengdaeng_chiwawa.png?dl=0'\n            },\n            {\n                type: \"웰시코기\",\n                desc: `도비가 부러운 자유로운 영혼인, 웰시코기\\n\n                ✓   상당히 활동적인 스타일, 열정이 가득해요. 허허..\\n\n                ✓   가끔 에너지가 너무 넘쳐나서 가끔 주변인들이 감당하기 힘들어요\\n\n                ✓   집에 있으면 시간이 너무 안가는 느낌, 밖을 나가야합니다.\\n\n                ✓   날 가두는 느낌 너무 힘들어.. 나에게 집착하지 말아줄래? 난 자유로운 영혼이거든! 알아서 잘하니까 너무 의심하거나 집착하지 말아주세요.\\n\n                ✓   하는 행동에 있어 단단함이 있고 자신감이 넘쳐나지만 친절해서 주위에 사람들이 넘쳐나요. 학생 시절엔 반장, 부반장의 경험 많죠. \\n\n                ✓   저 사람은 너무 순딩해하는 소리를 많이 듣지만 사실 나는 단호박입니다. \\n\n                ✓   눈으로 말을 하는 것 같은..뭔가…매력이 있어….왜지…눈으로 사람 설레게 하기 만랩\\n\n                ✓   이성에게 인기가 많은 타입이에요. 난 그냥 이 사람을 도와준 것 뿐인데 보면 저를 좋아하고 있더라구요. 왤까요? 하면서 다른 사람이 가지지 못한 마성의 매력`,\n                query: \"3ehfdusqusdlwlqzhrfj\",\n                score_range:range(51, 75),\n                img_src:'https://dl.dropboxusercontent.com/s/5cvgrsniqlwtzu2/daengdaeng_wealthy.png?dl=0'\n            },\n            {\n                type: \"리트리버\",\n                desc: `친숙한 댕댕이 , 리트리버\\n\n                ✓   순한 성격의 소유자, 이런들 어떠하리~ 저런들 어떠하리~ 이해심이 넘쳐나요\\n\n                ✓   사람을 잘 따르고 상냥한 친절한 성격을 지니고 있어 주변에서 은근 좋아하는 이성이 많아요. 하지만 본인은 모르죠. 주인공아닌가요? \\n\n                ✓   어쩜 이렇게 화를 안낼까 하지만 화를 내면 세상 제일 무서워요.\\n\n                ✓   은근 아무것도 하기 싫고 잘 누워있는 편이라 주변에서 놀자고 해야해요. 아니면 집 밖에 잘 안나오려고 해서… 누군가라도 만나자고 하면 일단 만나니까 놀아줘요.\\n\n                ✓   순둥순둥해서 걱정하겠지만 은근히 모든 걸 다 잘해냅니다.\\n\n                ✓   한 번 놀 때 미친듯이 놀면 적당한 휴식이 꼭 필요해요\\n\n                ✓   사람 자체가 너무 편안해서 같이 있으면 그냥 행복해지는 에너자이저~\\n\n                ✓   인내심 최강자이면서 예의도 바르지만 또 장난꾸러기 하지만 머리도 좋아 뭐야 못하는게 뭐야~~완전 워너비 애인상이로구나!`,\n                query: \"4vmfhwlqzhrfj\",\n                score_range:range(76, 101),\n                img_src:'https://dl.dropboxusercontent.com/s/lfm5aj3j4dqcct0/daengdaeng_retriever.png?dl=0'\n            },\n            {\n                type: \"비글\",\n                desc: `지치는 게 뭐야? ~~세상 미친 텐션 비글!\\n\n                ✓   체력이 대단하다고 생각할 정도로 미친 텐션의 소유자 비글!\\n\n                ✓   영리하고 머리가 좋아요~ 그래서 눈치도 수준급! \\n\n                ✓   여기 저기 맛집 탐방을 좋아하고 음식을 너무 좋아해요. 맛집 물어보면 왠만한 건 다 알정도로 아주 맛집 리스트를 가지고 있죠.\\n\n                ✓   악마견이라 불리지만 사실은 에너지가 넘쳐나고 사람을 너무 좋아해서 관심을 달라는 말이에요. \\n\n                ✓   외로움을 많이 타서 늘 밖으로 나가고 싶어해요. 누구든 만나서 힘차게 놀아야 외롭지 않거든요. 혼자 있는 거 너무 싫어!!! 스트레스 만땅!\\n\n                ✓   노는게 제일 좋아~ 친구들 모여라~ 언제나! 즐거워!\\n\n                ✓   될 때로 돼라~~~라는 마인드 늘 긍정적이고 낙천적인 마인드의 소유자+`,\n                query: \"4vmfhwlqzhrfj\",\n                score_range:range(76, 101),\n                img_src:'https://dl.dropboxusercontent.com/s/l1smzkp0z8tqiyr/daengdaeng_beagle.png?dl=0'\n            },\n        ]\n    },\n    {\n        info : {\n            mainTitle:\"프로 집콕러 테스트\",\n            subTitle:\"이시국엔 집에 붙어 있자 꼭!\",\n            mainUrl:\"zipkok\",\n            scoreType:\"numberScoring\",\n            mainImage:\"https://dl.dropboxusercontent.com/s/m5f6f8df57f4qdf/zipkok-main.png?dl=0\"\n        },\n        questions:[\n            {\n                question: '\"00아 주말에 만날래?\" 주말에 만나자는 친구! \\n 하지만 이츠 쏘 매우 귀찮! 과연 당신의 답장은?',\n                answers:[\n                    {\n                        type: \"사자\",\n                        score: 2,\n                        content: '그래도 친구가 간만에 만나자는데 봐야지뭐, \\n \"어디서볼래?\"'\n                    },\n                    {\n                        type: \"너구리\",\n                        score: 5,\n                        content: '귀찮지만 뭐하는 지에 따라 나갈지 말지 결정한다. \\n \"주말? 뭐하게?\"'\n                    },\n                    {\n                        type: \"펭귄\",\n                        score: 10,\n                        content: '귀찮은건 No! 약속 있는 척 하고 집에서 쉬어야지. \\n \"나 이번주는 안되는데..약속 있어,,\"'\n                    },\n                ],\n            },\n            {\n                question: \"나에게 소확행이란?\",\n                answers:[\n                    {\n                        type: \"사자\",\n                        score: 2,\n                        content: \"남자친구와 주말에 걸어다니면서 소소한 데이트하기\"\n                    },\n                    {\n                        type: \"너구리\",\n                        score: 5,\n                        content: \"친구들이랑 다같이 모여서 캠핑이나 1박 여행을 간다.\"\n                    },\n                    {\n                        type: \"펭귄\",\n                        score: 10,\n                        content: \"다 필요없어~행복이란 \\n '내침대에 따뜻한 전기장판과 부드러운 극세사 이불을 덮고 밀린 영화나 드라마를 귤을 까먹으면 보는 것'..\"\n                    },\n                ]\n            },\n            {\n                question: \"아무런 약속이 없는 주말,,\\n 아침일찍 눈이 떠진 나 뭐할까?\",\n                answers:[\n                    {\n                        type: \"사자\",\n                        score: 2,\n                        content: \"밥먹고 샤워를 한 뒤 밀린 방 청소나 할일을 찾아 움직인다.\"\n                    },\n                    {\n                        type: \"너구리\",\n                        score: 5,\n                        content: \"밥먹고 세수와 양치만 하고 쇼파에 앉아 티비를 본다.\"\n                    },\n                    {\n                        type: \"펭귄\",\n                        score: 10,\n                        content: \"양치만 하고 누워서 넷플릭스나 왓챠를 켜본다.\"\n                    },\n                ]\n            },\n            {\n                question: \"드디어 금요일~~~~\\n기다리던 주말이 다가온다! 뭐하지~~?\",\n                answers:[\n                    {\n                        type: \"사자\",\n                        score: 2,\n                        content: \"집에 있는 건 너무 심심해! \\n 친구들한테 만나자며 먼저 연락한다.\"\n                    },\n                    {\n                        type: \"너구리\",\n                        score: 5,\n                        content: \"집에 있다가 만나자는 연락을 받으면 저녁에 슬슬 기어나간다.\"\n                    },\n                    {\n                        type: \"펭귄\",\n                        score: 10,\n                        content: \"주말에..왜 약속을.. \\n 난 푹쉴랭! 굳이 먼저 약속을 따로 잡지 않는다.\"\n                    },\n                ]\n            },\n            {\n                question: \"집에 있을 때 나의 모습은?\",\n                answers:[\n                    {\n                        type: \"사자\",\n                        score: 2,\n                        content: \"으 시간이 왤케 안가.. \\n 주변 친구들에게 연락해서 나갈 각잡기\"\n                    },\n                    {\n                        type: \"너구리\",\n                        score: 5,\n                        content: \"낮엔 자고 밤에 나가야지~ \\n 8.9시쯤 나갈준비를 해본다.\"\n                    },\n                    {\n                        type: \"펭귄\",\n                        score: 10,\n                        content: \"밀린 드라마나 영화가 너무 많아 시간이 짧다.\"\n                    },\n                ]\n            },\n            {\n                question: \"배달 앱 속 나의 등급은?\",\n                answers:[\n                    {\n                        type: \"사자\",\n                        score: 2,\n                        content: \"배달은 별로, 난 맛집 탐방가임\"\n                    },\n                    {\n                        type: \"너구리\",\n                        score: 5,\n                        content: \"그냥 가끔 집에 있거나 친구들이랑 파티할 때 시킴\"\n                    },\n                    {\n                        type: \"펭귄\",\n                        score: 10,\n                        content: \"vip 이하로 떨어져본적이 없수다\"\n                    },\n                ]\n            },\n            {\n                question: \"갑자기 일이생겨 못만난다고 하는 친구!\",\n                answers:[\n                    {\n                        type: \"사자\",\n                        score: 2,\n                        content: \"아,,어쩔 수 없지 하면서 바로 만날 친구에게 전화를 건다.\"\n                    },\n                    {\n                        type: \"너구리\",\n                        score: 5,\n                        content: \"밖에 있으면 누구라도 나오겟지. \\n 카페나 pc방에서 친구들을 부른다.\"\n                    },\n                    {\n                        type: \"펭귄\",\n                        score: 10,\n                        content: \"안타까워하는 척 하면서 집에서 쉴 생각에 기분이 좋아진다.\"\n                    },\n                ]\n            },\n            {\n                question: \"집에만 있으니 심심한 당신!\\n생각에 빠지게 되는데...\",\n                answers:[\n                    {\n                        type: \"사자\",\n                        score: 2,\n                        content: \"휴 이렇게 집에만 있으니 좀 그렇다..\\n 라고 생각하며 당장 뭘 배워야할지 찾아보고 상담예약을 잡아본다.\"\n                    },\n                    {\n                        type: \"너구리\",\n                        score: 5,\n                        content: \"당분간은 계속 집에 있어야하는데.. \\n 먹을 간식과 생필품을 구입한다.\"\n                    },\n                    {\n                        type: \"펭귄\",\n                        score: 10,\n                        content: \"나는.. 아무생각이 없다. \\n 왜냐면 아무생각이 없기 때문이다.\"\n                    },\n                ]\n            },\n            {\n                question: \"약속 시간 전 당신의 모습은?\",\n                answers:[\n                    {\n                        type: \"사자\",\n                        score: 2,\n                        content: \"옷은 전 날에 미리 골라놨으니 메이크업, 헤어 등 섬세하게 꾸민다\"\n                    },\n                    {\n                        type: \"너구리\",\n                        score: 5,\n                        content: \"약속 2시간전 부터 일어나서 준비중이지만 세월아 네월아한다.\"\n                    },\n                    {\n                        type: \"펭귄\",\n                        score: 10,\n                        content: \"아 귀찮다...나가지말까 \\n 하고 늘어져있다가 시간을 보고 재빨리 준비한다.\"\n                    },\n                ]\n            },\n            {\n                question: \"친구들과의 약속이 있을때 나의 모습은?\",\n                answers:[\n                    {\n                        type: \"사자\",\n                        score: 2,\n                        content: \"10분 전에 미리 도착해 친구들을 기다린다.\"\n                    },\n                    {\n                        type: \"너구리\",\n                        score: 5,\n                        content: \"조큼 늦는다고 친구들이 다 가있을때 그 장소로 간다.\"\n                    },\n                    {\n                        type: \"펭귄\",\n                        score: 10,\n                        content: \"진짜 되도록 안나가지만 굳이 약속이 있다면 정각에 도착한다.\"\n                    },\n                ]\n            },\n        ],\n        results:[\n            {\n                type: \"Level 1. 초보 집콕러\",\n                desc: \"집에 있으면 있지만 심심하면 집 밖을 나가고 싶어하는 \\n 초보집콕러~ \\n 아직은 집이랑 서먹서먹한 42~ \\n 이틀이상 집에 있으면 나가고 싶어서 안달난 마치 라푼젤같은 그대! \\n 집에 있다가도 나오라면 바로 나오는 오케이맨~!\",\n                query: \"chqhwlqzhrfj\",\n                score_range:range(26),\n                img_src:'https://dl.dropboxusercontent.com/s/fkt02q4cy8onjr7/zipkok_chqhwlqzhrfj.png?dl=0'\n            },\n            {\n                type: \"Level 2. 선택형 집콕러\",\n                desc: \"주말엔 집에서 쉬는게 최고지만~~ \\n 날 만나고 싶다면 ~ 나가줘야지~~~~ 뭐할건데? \\n 꼭 재밌는 일이 있으면 무조건 튀어나가는 그대는 바로 \\n 선택형 집콕러! \\n 당신은 집에 있는 걸 좋아하지만 선택장애의 면모가 리를 빗 \\n 있기때문에 친구들의 설득과 흥미 딘딘한 일이 있으면 \\n 바로 집에서 튀어나가버리곤 하지~~\",\n                query: \"tjsxorgudwlqzhrfj\",\n                score_range:range(26, 51),\n                img_src:'https://dl.dropboxusercontent.com/s/m46a1ar0zsod71d/zipkok_tjsxorgudwlqzhrfj.png?dl=0'\n            },\n            {\n                type: \"Level 3. 돌연변이 집콕러\",\n                desc: \"극과극인 정말 집콕하고 싶을때 집에서 절대 나오지 않z...! \\n 하지만 어느순간 또 약속 줄줄 잡아 버리는 그대! \\n 성수기와 비성수기가 확실한 당신은 바로 \\n 돌연변이 집콕러! \\n 집에서도 밖에서도 최선을 다해 노는 당신! \\n 한번 놀고 나면 꼭 충분한 휴식이 필요하지~\",\n                query: \"ehfdusqusdlwlqzhrfj\",\n                score_range:range(51, 75),\n                img_src:'https://dl.dropboxusercontent.com/s/vwl7j0xc5rrueev/zipkok_ehfdusqusdlwlqzhrfj.png?dl=0'\n            },\n            {\n                type: \"Level 4. 프로 집콕러\",\n                desc: \"집이 곧 나의 삶의 전부일세, 당신은 바로 \\n 프로 집콕러~ \\n 집을 왜 나가~~ 집밖은 위험해~ \\n 주변에 아무리 불러도 순순히 나가지 않지!! 마치 나는 신비주의~!! \\n 하지만 그냥 나가기 귀찮은 사람 ^^ \\n 개인적인 시간은 필수! 집에서 나가는 것 조차 큰 결심이 필요해요~ \\n 집에 놀거리 가득하면 집 밖에 더더욱 안나갈 자신이 있어~~~~~\",\n                query: \"vmfhwlqzhrfj\",\n                score_range:range(76, 101),\n                img_src:'https://dl.dropboxusercontent.com/s/6jwrj44gjfi3g5g/zipkok_vmfhwlqzhrfj.png?dl=0'\n            },\n        ]\n    },\n]\n\nexport default TESTS;\n","import React, { Component, Fragment } from 'react';\nimport { Link } from 'react-router-dom'\nimport MAINHEADER from '../main-header.png'\nimport TESTS from '../api/TESTS'\n\nclass MainPage extends Component{\n    constructor(props){\n        super(props)\n        let i = 0;\n        let _all_tests_url = [];\n        while (i<TESTS.length) {\n        _all_tests_url.push(['/'+TESTS[i].info.mainUrl+'/', TESTS[i].info.mainImage, TESTS[i].info.mainTitle])\n        i = i + 1;\n        }\n        this.state = {\n            all_tests_url:_all_tests_url,\n        }\n    }\n\n    render(){\n        return (\n            <Fragment>\n                <div>\n                    <img className='main-header' src={MAINHEADER} alt=\"K-test\"/>\n                </div>\n                <div className=\"main-link-div\">\n                    {this.state.all_tests_url.map((item)=>(\n                        <Link to={item[0]} className=\"main-link-block\" key={item[0].replaceAll('/','')}>\n                            <img className=\"test-main-img\" src={item[1]} alt={item[2]}/>                               \n                        </Link>\n                    ))}\n                </div>\n            </Fragment>\n            \n        )       \n    }\n}\n\nexport default MainPage;","import React, { Component } from 'react';\nimport { ProgressBar } from 'react-bootstrap';\n\nclass QuestionCount extends Component {\n    \n    render(){\n        return(\n            <div className=\"question-progress\">\n                <div className='progress-bar' >\n                    <ProgressBar now={this.props.quizCount / this.props.totalCount * 100} variant=\"danger\" />\n                </div>\n                <div className=\"question-count\">\n                    {this.props.quizCount+1} / {this.props.totalCount}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default QuestionCount;","import React, { Component } from 'react';\n\nclass Question extends Component {\n    render(){\n        return(\n            <div className=\"question\">\n                <h5 className=\"question-p\">{this.props.question}</h5>\n            </div>\n        );\n    }\n}\n\nexport default Question;","import React, { Component, Fragment } from 'react';\nimport QuestionCount from './QuestionCount'\nimport Question from './Question'\nimport { Button } from 'react-bootstrap';\n\nclass Quiz extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            quizCount:0,\n            appearQuiz:true,\n        }\n    }\n    // the function below is for option randomize\n    arrayShuffler(array){\n        var currentIndex = array.length, temporaryValue, randomIndex;\n          \n        // While there remain elements to shuffle...\n        while (0 !== currentIndex) {\n        \n            // Pick a remaining element...\n            randomIndex = Math.floor(Math.random() * currentIndex);\n            currentIndex -= 1;\n        \n            // And swap it with the current element.\n            temporaryValue = array[currentIndex];\n            array[currentIndex] = array[randomIndex];\n            array[randomIndex] = temporaryValue;\n        }\n        \n        return array;\n    }\n    renderAnswerOptions(){\n        var qAndA = null;\n        qAndA = this.props.qAndA[this.props.quizNum];\n        var _questions = [];\n        var i = 0;\n        var nextQuizNum = this.props.quizNum + 1;\n        while(i < qAndA.answers.length){\n            // when the type is cummulative number scoring\n            if(this.props.scoreType === \"numberScoring\"){\n                _questions.push(\n                    <Button\n                        key={this.props.quizNum-i}\n                        value={qAndA.answers[i].score} \n                        onClick={function(e) {\n                            e.preventDefault();\n                            if(this.props.quizNum === this.props.qAndA.length-1){\n                                this.props.onChangeMode(nextQuizNum, e.target.value, \"loading\"); //result\n                            } else {\n                                this.setState({\n                                    quizCount:this.state.quizCount+1 // for Quiz Counting => QuestionCount.js\n                                })\n                                this.props.onChangeMode(nextQuizNum, e.target.value, \"quiz\");\n                            }\n                        }.bind(this)}\n                        variant=\"outline-dark\" \n                        size=\"lg\"\n                        className=\"option-btn\"\n                    >{qAndA.answers[i].content}</Button>)\n            // when the type is each type counting\n            } else if (this.props.scoreType === \"typeCounting\"){\n                _questions.push(\n                    <Button\n                        key={this.props.quizNum-i}\n                        value={qAndA.answers[i].type}\n                        onClick={function(e) {\n                            e.preventDefault();\n                            if(this.props.quizNum === this.props.qAndA.length-1){\n                                this.props.onChangeMode(nextQuizNum, e.target.value, \"loading\"); //result\n                            } else {\n                                this.setState({\n                                    quizCount:this.state.quizCount+1 // for Quiz Counting => QuestionCount.js\n                                })\n                                this.props.onChangeMode(nextQuizNum, e.target.value, \"quiz\");\n                            }\n                        }.bind(this)}\n                        variant=\"outline-dark\" \n                        size=\"lg\"\n                        className=\"option-btn\"\n                    >{qAndA.answers[i].content}</Button>)\n            }\n            i = i + 1;\n        }\n        _questions = this.arrayShuffler(_questions) // randomize answer option btn\n        return(\n            _questions\n        )\n    }\n    render(){\n        \n        return(\n            <Fragment>\n                <Question question={this.props.qAndA[this.props.quizNum].question}></Question>\n                <div className=\"option-btn-div\">\n                    {this.renderAnswerOptions()}\n                </div>\n                <QuestionCount totalCount={this.props.qAndA.length} quizCount={this.state.quizCount}></QuestionCount>\n            </Fragment>\n        );\n    }\n}\n\nexport default Quiz;","import React, { Component, Fragment } from 'react';\nimport Intro from './Intro'\nimport TESTS from '../api/TESTS'\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\nimport App from '../App'\nimport { Button, Card } from 'react-bootstrap';\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\n\nclass Result extends Component {\n    constructor(props){\n        super(props)\n        const _sharable_url = window.location.href;\n        const _current_url = _sharable_url.split('/')\n        const _current_test = _current_url.reverse()[2]\n        const _current_result = _current_url[0]\n        this.state = {\n            mode:\"result\",\n            sharable_url:_sharable_url,\n            current_url:_current_url,\n            current_test:_current_test,\n            current_result:_current_result,\n        }\n        this._onBackToStartButtonClick = this._onBackToStartButtonClick.bind(this)\n    }\n\n    _onBackToStartButtonClick(){\n        this.setState({\n            mode:\"intro\"\n        })\n    }\n    introPageRender(){\n\n        const current_tests_path = '/' + this.state.current_test + '/';\n        return(\n            <Router basename='/kapable.github.io/'> \n                <Switch>\n                    <Route path={current_tests_path} component={()=><Intro test={this.state.current_test}/>} exact/>\n                    <Redirect to={current_tests_path} />\n                </Switch>\n            </Router>\n        )\n    }\n\n    resultRender(){\n        // searching the result content by current url path\n\n        let final_type = ''\n        let final_desc = ''\n        let img_src = ''\n        let i = 0;\n        while(i<TESTS.length){\n            if(TESTS[i].info.mainUrl === this.state.current_test){\n                let j = 0;\n                while(j<TESTS[i].results.length){\n                    if(TESTS[i].results[j].query === this.state.current_result){\n                        final_type = TESTS[i].results[j].type\n                        final_desc = TESTS[i].results[j].desc\n                        img_src = TESTS[i].results[j].img_src\n                        break\n                    }\n                    j = j + 1;\n                }\n                // break\n            }\n            i = i + 1;\n        }\n\n        // return final result option\n        return (\n            <Fragment>\n                <img src={img_src} className='result-img' alt={final_type} />\n                <Card className=\"result-card\" bg=\"light\">\n                    {/* <Card.Img variant='top' src={img_src} className='result-img' alt={final_type} /> */}\n                    <Card.Body className=\"result-p\">\n                        <Card.Text>{final_desc}</Card.Text>\n                    </Card.Body>\n                </Card>\n            </Fragment>\n                \n        )\n    }\n\n    mainPageRender(){\n        return(\n            <Router > \n                <Switch>\n                    <Route path='/' component={App} exact/>\n                    <Redirect to='/' />\n                </Switch>\n            </Router>\n        )\n    }\n\n    goBack(){\n        this.props.history.goBack();\n    }\n\n    resultPageRender(){\n        return(\n            <div className=\"result\">\n                <div className=\"result-header\">\n                    <h5 className=\"result-title\">당신의 성향은..!</h5>\n                    <div className=\"result-value\">\n                        {this.resultRender()}\n                    </div>\n                </div>\n                <div className=\"share\">\n                    <h5 className=\"share-title\">친구에게 공유하기</h5>\n                    <div className=\"share-btn\">\n                        <CopyToClipboard text={this.state.sharable_url}>\n                            <Button \n                                variant=\"dark\"\n                                onClick={function(){alert(\"링크가 복사됐어요!\")}}>🔗 링크 복사</Button>\n                        </CopyToClipboard>\n                    </div>\n                    <div className=\"re-test-btn\">\n                        <Button onClick={this._onBackToStartButtonClick} className=\"retest-btn\" variant=\"dark\">⟲ 테스트 다시하기</Button>\n                    </div>\n                </div>\n                <div className=\"back-to-main\">\n                    <Button\n                        variant=\"dark\"\n                        onClick={function(e) {\n                            e.preventDefault();\n                            this.setState({\n                                mode:\"main\"\n                            })\n                        }.bind(this)}\n                        >⌂ 다른 테스트 하러가기</Button>\n                </div>\n            </div>\n            \n        );\n    }\n\n    pageRenderer(){\n        let _page = []\n        if(this.state.mode === \"result\") {\n            _page = this.resultPageRender()\n        } else if (this.state.mode === \"intro\") {\n            _page =  this.introPageRender()\n        } else if (this.state.mode === \"main\") {\n            _page = this.mainPageRender()\n        }\n        return _page\n    }\n\n    \n    render(){\n        return(\n            <div>\n                {this.pageRenderer()}\n            </div>\n        );\n    }\n}\n\nexport default Result;","import React, { Component } from 'react';\nimport Lottie from 'react-lottie';\nimport * as loading from '../loading-animation.json'\n\nconst defaultOptions = {\n    loop: true,\n    autoplay: true, \n    animationData: loading.default,\n    rendererSettings: {\n      preserveAspectRatio: 'xMidYMid slice'\n    }\n  };\n\nclass Loading extends Component {\n    render(){\n        return(\n            <div className=\"loading\" >\n                <Lottie options={defaultOptions} height={120} width={120}/>\n            </div>\n        )\n    }\n}\n\nexport default Loading;\n\n// https://github.com/chenqingspring/react-lottie","import React, { Component, Fragment } from 'react';\nimport Quiz from './Quiz'\nimport Result from './Result'\nimport Loading from './Loading'\nimport TESTS from '../api/TESTS'\nimport { BrowserRouter as Router, Redirect, Route, withRouter } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport Typist from 'react-typist';\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport { Helmet } from 'react-helmet';\n\nclass Intro extends Component {\n    constructor(props){\n        super(props)\n        let _current_test = [];\n        let i = 0;\n        while (i<TESTS.length) {\n            if(TESTS[i].info.mainUrl === this.props.test){\n                _current_test = TESTS[i]\n                break\n            }\n            i = i + 1\n        }\n        // create answer option object for counting each question's answer\n        var _answer_type_obj = {};\n        var j = 0;\n        for(j=0;j<_current_test.questions[0].answers.length;j++) {\n            _answer_type_obj[_current_test.questions[0].answers[j].type] = 0;\n        };\n        // for randomizing participants number(range)\n        let min = 1402052;\n        let max = 2000000;\n        \n        this.state = {\n            mode:'intro',\n            current_test:_current_test,\n            qAndA:_current_test.questions,\n            scoreType:_current_test.info.scoreType,\n            answer_type_obj:_answer_type_obj, // < ------------- for calculating type += 1\n            quizNumber:0,\n            counted_score:0, // < ------------- for calculating scores\n            result_url:'/result/',\n            quiz_url:window.location.href,\n            participants:Math.trunc((Math.random() * (max - min) + min)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"),\n        }\n        this._onStartButtonClick = this._onStartButtonClick.bind(this);\n        this._onMainButtonClick = this._onMainButtonClick.bind(this);\n    }\n\n    _onStartButtonClick(){\n        this.setState({\n            mode:'quiz'\n        })\n    }\n\n    _onMainButtonClick(){\n        this.setState({\n            mode:'main'\n        })\n    }\n\n    introPageRender(){\n        \n        let _mainTitle = this.state.current_test.info.mainTitle;\n        let _subTitle = this.state.current_test.info.subTitle;\n        \n        return (\n            <div className=\"intro container\">\n                <h1 className='title'>{_mainTitle}</h1>  \n                <h5 className='sub-title'>{_subTitle}</h5>\n                <div className='btn-positioner'></div>\n                {/* <Typist className=\"start-btn-participants\">\n                    현재 총 {this.state.participants}명이 참여했어요.\n                </Typist> */}\n                <div className=\"start-btn-div\">\n                    <Button\n                        onClick={this._onStartButtonClick}\n                        variant=\"dark\"\n                        size=\"lg\"\n                        className=\"start-btn\"\n                        bsPrefix=\"btn\"\n                    >시작하기\n                    </Button>\n                </div>\n                <div className=\"test-intro-with-friend\">\n                    <h5>친구들과 함께 해보기</h5>\n                    <CopyToClipboard text={this.state.quiz_url}>\n                        <Button \n                            className=\"test-intro-with-friend-btn\"\n                            variant=\"dark\"\n                            onClick={function(){alert(\"링크가 복사됐어요!\")}}>🔗 테스트 링크 복사</Button>\n                    </CopyToClipboard>\n                </div>\n                <div className=\"test-intro-to-main\">\n                    <Button\n                        onClick={this._onMainButtonClick}\n                        variant=\"dark\"\n                        className=\"test-intro-to-main-btn\"\n                        bsPrefix=\"btn\"\n                    >⇦ 다른 테스트 하러 뒤로가기</Button>\n                </div>\n            </div>\n        );\n    }\n\n    resultCaculator(){\n        if (this.state.scoreType === \"numberScoring\"){\n            let final_score = this.state.counted_score;\n            for (let k = 0; k < this.state.current_test.results.length; k++){\n                if(this.state.current_test.results[k].score_range.includes(final_score)){\n                    return this.state.current_test.results[k];\n                }\n            }\n        } else if (this.state.scoreType === \"typeCounting\") {\n            let final_result = this.state.answer_type_obj;\n            let keys = Object.keys(final_result);\n            let max = final_result[keys[0]];\n            let max_keys = [];\n            for (let z = 0 ; z < keys.length; z++) {\n                let value = final_result[keys[z]];\n                if (value > max) max = value\n            }\n            for (let key of keys) {\n                if(final_result[key] === max) {\n                    max_keys.push(key)\n                }\n            }\n            for (let z=0;z<this.state.current_test.results.length;z++){\n                if(max_keys[0] === this.state.current_test.results[z].type){\n                    return this.state.current_test.results[z]\n                }\n            }\n        }\n        \n    }\n    quizPageRender(){\n        if(this.state.mode === \"quiz\"){\n            // when the type is cummulative number scoring\n            if (this.state.scoreType === \"numberScoring\") {\n                let _page = <Quiz\n                qAndA={this.state.qAndA}\n                quizNum={this.state.quizNumber}\n                scoreType={this.state.scoreType}\n                onChangeMode={\n                    function(_quizNum, _score, _mode) {\n                    // e.preventDefault();\n                    let _scores = this.state.counted_score + Number(_score)\n                    this.setState({\n                        quizNumber:_quizNum,\n                        counted_score:_scores,\n                        mode:_mode\n                    })\n                }.bind(this)}></Quiz>\n                return(\n                    _page\n                ) \n            // when the type is each type counting\n            } else if (this.state.scoreType === \"typeCounting\") {\n                let _page = <Quiz\n                qAndA={this.state.qAndA}\n                quizNum={this.state.quizNumber}\n                scoreType={this.state.scoreType}\n                onChangeMode={\n                    function(_quizNum, _answer, _mode) {\n                    var _answer_obj = Object.assign({}, this.state.answer_type_obj);\n                    _answer_obj[_answer] = _answer_obj[_answer] + 1;\n                    this.setState({\n                        quizNumber:_quizNum,\n                        answer_type_obj:_answer_obj,\n                        mode:_mode\n                    })\n                }.bind(this)}></Quiz>\n                return _page\n            } else {\n                // do nothing yet but exception handling \n            }\n            return this._page\n        } \n    }\n\n    lodingPageRender(){\n        return(\n            <div className=\"loading-upper\">\n                <Loading />\n                {setTimeout(function(){\n                    this.setState({mode:\"result\"})\n                }.bind(this), 2700)}\n            </div>\n        )\n    }\n\n    resultPageRender(){\n        // go to result page\n        let result_contents = this.resultCaculator();\n        let final_score_query = result_contents.query // <----------------query export\n        \n        return(\n            <Router basename={'/kapable.github.io/'+this.state.current_test.info.mainUrl}>\n                <Route path={this.state.result_url+final_score_query} component={Result}/>\n                <Redirect to={this.state.result_url+final_score_query} />\n            </Router>\n        )   \n    }\n\n    pageRenderer(){\n        let _page = []\n        if(this.state.mode === \"intro\") {\n            _page = this.introPageRender()\n        } else if (this.state.mode === \"quiz\") {\n            _page =  this.quizPageRender()\n        } else if (this.state.mode === \"main\") {\n            _page = this.props.history.history('/')\n        } else if (this.state.mode === \"loading\") {\n            _page = this.lodingPageRender()\n        } else if (this.state.mode === \"result\") {\n            _page = this.resultPageRender()\n        }\n        return _page\n    }\n    \n    render(){\n        return (\n            <Fragment>\n                <Helmet>\n                    {/* <!-- Primary Meta Tags --> */}\n                    <title>{this.state.current_test.info.mainTitle}-K테스트</title>\n                    <meta name=\"title\" content={this.state.current_test.info.mainTitle+'-K테스트'}/>\n                    <meta name=\"description\" content={this.state.current_test.info.subTitle} data-react-helmet=\"true\"/>\n                    <link rel=\"main-url\" href={this.state.quiz_url}/>\n                    \n                    {/* <!-- Open Graph / Facebook --> */}\n                    <meta property=\"og:type\" content=\"website\"/>\n                    <meta property=\"og:url\" content={this.state.quiz_url}/>\n                    <meta property=\"og:title\" content={this.state.current_test.info.mainTitle}/>\n                    <meta property=\"og:description\" content={this.state.current_test.info.subTitle}/>\n                    <meta property=\"og:image\" content={this.state.current_test.info.mainImage}/>\n                    <meta property=\"og:image:alt\" content={this.state.current_test.info.mainTitle} />\n\n                    {/* <!-- Twitter --> */}\n                    <meta property=\"twitter:card\" content=\"summary_large_image\"/>\n                    <meta property=\"twitter:url\" content={this.state.quiz_url}/>\n                    <meta property=\"twitter:title\" content={this.state.current_test.info.mainTitle}/>\n                    <meta property=\"twitter:description\" content={this.state.current_test.info.subTitle}/>\n                    <meta property=\"twitter:image\" content={this.state.current_test.info.mainImage}/>\n                    <meta property=\"twitter:image:alt\" content={this.state.current_test.info.mainTitle} />\n                </Helmet>\n                {this.pageRenderer()}\n            </Fragment>\n        );\n    }\n}\n\nexport default withRouter(Intro);","import React, { Component } from 'react';\nimport Intro from './Intro'\nimport { BrowserRouter as Router, Route, Redirect, Switch} from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\n\nclass ResultToIntro extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            mode:\"result\",\n            test_main_url:'/relationtype/',\n        }\n        this._onBackToStartButtonClick = this._onBackToStartButtonClick.bind(this)\n    }\n    _onBackToStartButtonClick(){\n        this.setState({\n            mode:\"intro\"\n        })\n    }\n    introPageRender(){\n        return(\n            <Router basename='/kapable.github.io/'>\n                <Switch>\n                    <Route path={this.state.test_main_url} component={Intro} exact/>\n                    <Redirect to={this.state.test_main_url} />\n                </Switch>\n            </Router>\n        )\n    }\n    defaultGuidePageRender(){\n        return(\n            <div className='guide-div'>\n                <div className=\"guide-desc\">\n                    아래 버튼을 눌러 연애 심리 테스트를 해보세요!\n                </div>\n                <div className=\"guide-re-test-btn\">\n                    <Button onClick={this._onBackToStartButtonClick} className=\"retest-btn\" variant=\"dark\">테스트 다시하기</Button>\n                </div>\n            </div>\n            \n        )\n    }\n    render(){\n        return(\n            <div>\n                {this.state.mode === 'result' ? this.defaultGuidePageRender() : this.introPageRender()}\n            </div>\n        )\n    }\n}\n\nexport default ResultToIntro;","import React, { Component, Fragment } from 'react';\nimport MainPage from './components/MainPage';\nimport Intro from './components/Intro'\nimport ResultToIntro from './components/ResultToIntro'\nimport TESTS from './api/TESTS'\nimport { BrowserRouter as Router, Route, Switch, withRouter } from 'react-router-dom';\nimport Result from './components/Result';\nimport ScriptTag from 'react-script-tag'\nimport { Helmet } from 'react-helmet';\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    let i = 0;\n    let _all_tests_url = [];\n    while (i<TESTS.length) {\n      _all_tests_url.push('/'+TESTS[i].info.mainUrl+'/')\n      i = i + 1;\n    }\n    let j = 0;\n    let _all_tests_result_url = [];\n    while (j<_all_tests_url.length){\n      _all_tests_result_url.push(_all_tests_url[j]+'result/')\n      j = j + 1;\n    }\n    let _final_render_routes = [];\n    var k = 0;\n    \n    while(k<TESTS.length){\n      var l=  0;\n      while(l<TESTS[k].results.length){\n        _final_render_routes.push([TESTS[k].results[l].query, TESTS[k].info.mainUrl])\n        l = l + 1;\n      }\n      k = k + 1;\n    }\n    this.state = {\n      result_route:'result/',\n      all_tests_url:_all_tests_url,\n      all_tests_result_url:_all_tests_result_url,\n      final_render_routes:_final_render_routes,\n    }\n  }\n\n  reloadPage() { \n    var currentDocumentTimestamp = new Date(performance.timing.domLoading).getTime();\n    var now = Date.now(); \n    var tenSec = 10 * 1000;\n    var plusTenSec = currentDocumentTimestamp + tenSec;\n    if (now > plusTenSec) { window.location.reload(); } else {}\n  }\n\n  render() {\n    return(\n    <Fragment>\n      {/* Google Adsense Script */}\n      <ScriptTag data-ad-client=\"ca-pub-7365638386197005\" async src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\"></ScriptTag>\n      <Helmet>        \n        {/* <!-- Primary Meta Tags --> */}\n        <title>취향 분석 테스트</title>\n        <meta name=\"title\" content=\"취향 분석 테스트\"/>\n        <meta name=\"description\" content=\"진짜 내 모습을 찾아가는 취향 분석 테스트 모음\" data-react-helmet=\"true\"/>\n        <link rel=\"main-url\" href={window.location.href}/>\n          \n        {/* <!-- Open Graph / Facebook --> */}\n        <meta property=\"og:type\" content=\"website\"/>\n        <meta property=\"og:url\" content=\"https://kapable.github.io/\"/>\n        <meta property=\"og:title\" content=\"취향 분석 테스트\"/>\n        <meta property=\"og:description\" content=\"진짜 내 모습을 찾아가는 취향 분석 테스트 모음\"/>\n        <meta property=\"og:image\" content=\"https://dl.dropboxusercontent.com/s/n9pr74fbv6gdiub/main-header.png?dl=0\"/>\n        <meta property=\"og:image:alt\" content=\"진짜 내 모습을 찾아가는 취향 분석 테스트 모음\" />\n\n        {/* <!-- Twitter --> */}\n        <meta property=\"twitter:card\" content=\"summary_large_image\"/>\n        <meta property=\"twitter:url\" content=\"https://kapable.github.io/\"/>\n        <meta property=\"twitter:title\" content=\"취향 분석 테스트\"/>\n        <meta property=\"twitter:description\" content=\"진짜 내 모습을 찾아가는 취향 분석 테스트 모음\"/>\n        <meta property=\"twitter:image\" content=\"https://dl.dropboxusercontent.com/s/n9pr74fbv6gdiub/main-header.png?dl=0\"/>\n        <meta property=\"twitter:image:alt\" content=\"진짜 내 모습을 찾아가는 취향 분석 테스트 모음\" />\n      </Helmet>\n\n      {this.reloadPage()}\n      <Router basename='/kapable.github.io/'>\n        <Switch>\n\n          {/* \"Main\" page */}\n          <Route path='/' exact>\n              <MainPage/>\n          </Route>\n\n          {/* go to \"Intro\" page */}\n          {this.state.all_tests_url.map((item)=>(\n            <Route\n              path={item}\n              component={() => <Intro test={item.replaceAll('/','')}/>}\n              key={item.replaceAll('/','')}\n              exact\n            />\n          ))}\n\n          {/* go to \"Result to Start\" page */}\n          <Route path={this.state.all_tests_result_url} component={ResultToIntro} exact/>\n\n          {/* go to \"Each Result contents\" page */}\n          {this.state.final_render_routes.map((item)=>(\n            <Route\n              path={'/'+item[1]+'/'+this.state.result_route+item[0]}\n              component={Result}\n              key={item[1]+'_'+item[0]} exact/>\n          ))}\n        </Switch>\n      </Router>\n\n      {/* footer */}\n      <div className=\"intro-footer\">\n          <p>MAKER - 케이테스트</p>\n          <h5>광고 및 후원 문의</h5>\n          <p>ktestktest3@gmail.com</p>\n      </div>\n    </Fragment>\n    )\n  }\n  \n}\n\n\nexport default withRouter(App);\n\n// <<in package.json>>\n// below just use github domain\n// \"scripts\": {\n//   \"start\": \"react-scripts start\",\n//   \"build\": \"react-scripts build\",\n//   \"test\": \"react-scripts test\",\n//   \"eject\": \"react-scripts eject\",\n//   \"predeploy\": \"npm run build\",\n//   \"deploy\": \"gh-pages -d build\"\n// },\n\n// below use custom domain\n// \"scripts\": {\n//   \"start\": \"react-scripts start\",\n//   \"build\": \"react-scripts build\",\n//   \"test\": \"react-scripts test\",\n//   \"eject\": \"react-scripts eject\",\n//   \"cname\": \"echo test.k-test.net > build/CNAME\",\n//   \"nojekyll\": \"echo > build/.nojekyll\",\n//   \"predeploy\": \"npm run build && npm run cname && npm run nojekyll\",\n//   \"deploy\": \"gh-pages --add --dotfiles -d build\"\n// },","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}